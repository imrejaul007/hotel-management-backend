<!-- Breadcrumb -->
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/admin/dashboard">Dashboard</a></li>
        <li class="breadcrumb-item"><a href="/admin/bookings">Bookings</a></li>
        <li class="breadcrumb-item active" aria-current="page">Calendar</li>
    </ol>
</nav>

<!-- Calendar View -->
<div class="container-fluid">
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Booking Calendar</h6>
            <div class="btn-group">
                <button type="button" class="btn btn-sm btn-outline-primary" id="calendarMonthBtn">Month</button>
                <button type="button" class="btn btn-sm btn-outline-primary" id="calendarWeekBtn">Week</button>
                <button type="button" class="btn btn-sm btn-outline-primary" id="calendarDayBtn">Day</button>
            </div>
        </div>
        <div class="card-body">
            <!-- Room Filter -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="roomTypeFilter">Room Type</label>
                        <select class="form-control" id="roomTypeFilter">
                            <option value="">All Types</option>
                            {{#each roomTypes}}
                            <option value="{{this.id}}">{{this.name}}</option>
                            {{/each}}
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="floorFilter">Floor</label>
                        <select class="form-control" id="floorFilter">
                            <option value="">All Floors</option>
                            {{#each floors}}
                            <option value="{{this}}">Floor {{this}}</option>
                            {{/each}}
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="statusFilter">Status</label>
                        <select class="form-control" id="statusFilter">
                            <option value="">All Statuses</option>
                            <option value="available">Available</option>
                            <option value="occupied">Occupied</option>
                            <option value="maintenance">Maintenance</option>
                            <option value="cleaning">Cleaning</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>&nbsp;</label>
                        <button class="btn btn-primary btn-block" id="applyFilters">
                            <i class="fas fa-filter"></i> Apply Filters
                        </button>
                    </div>
                </div>
            </div>

            <!-- Calendar Container -->
            <div id="calendar"></div>

            <!-- Legend -->
            <div class="row mt-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <h6 class="font-weight-bold">Legend</h6>
                            <div class="d-flex flex-wrap">
                                <div class="mr-4">
                                    <span class="badge bg-success">&nbsp;</span> Available
                                </div>
                                <div class="mr-4">
                                    <span class="badge bg-danger">&nbsp;</span> Occupied
                                </div>
                                <div class="mr-4">
                                    <span class="badge bg-warning">&nbsp;</span> Maintenance
                                </div>
                                <div class="mr-4">
                                    <span class="badge bg-info">&nbsp;</span> Cleaning
                                </div>
                                <div class="mr-4">
                                    <span class="badge bg-secondary">&nbsp;</span> Blocked
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Booking Modal -->
<div class="modal fade" id="bookingModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Booking Details</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="bookingForm">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Guest Name *</label>
                                <input type="text" class="form-control" name="guestName" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Room Number *</label>
                                <select class="form-control" name="roomId" required>
                                    <option value="">Select Room</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Check-in *</label>
                                <input type="datetime-local" class="form-control" name="checkIn" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Check-out *</label>
                                <input type="datetime-local" class="form-control" name="checkOut" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Adults *</label>
                                <input type="number" class="form-control" name="adults" min="1" value="1" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Children</label>
                                <input type="number" class="form-control" name="children" min="0" value="0">
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label>Special Requests</label>
                                <textarea class="form-control" name="specialRequests" rows="3"></textarea>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" id="deleteBooking" style="display: none;">Delete</button>
                <button type="button" class="btn btn-primary" id="saveBooking">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Include FullCalendar library -->
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>

<!-- Calendar Initialization Script -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize FullCalendar
    const calendarEl = document.getElementById('calendar');
    const calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'resourceTimelineMonth',
        schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',
        headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'resourceTimelineDay,resourceTimelineWeek,resourceTimelineMonth'
        },
        resources: {
            url: '/admin/api/rooms',
            method: 'GET'
        },
        events: {
            url: '/admin/api/bookings/calendar',
            method: 'GET'
        },
        editable: true,
        droppable: true,
        selectable: true,
        selectMirror: true,
        dayMaxEvents: true,
        resourceAreaWidth: '15%',
        resourceAreaHeaderContent: 'Rooms',
        resourceGroupField: 'floor',
        slotMinTime: '00:00:00',
        slotMaxTime: '24:00:00',

        // Event Handlers
        select: function(info) {
            showBookingModal('new', {
                resourceId: info.resource.id,
                start: info.start,
                end: info.end
            });
        },
        eventClick: function(info) {
            showBookingModal('edit', info.event);
        },
        eventDrop: function(info) {
            updateBooking(info.event);
        },
        eventResize: function(info) {
            updateBooking(info.event);
        }
    });

    calendar.render();

    // Filter Handlers
    document.getElementById('applyFilters').addEventListener('click', function() {
        const filters = {
            roomType: document.getElementById('roomTypeFilter').value,
            floor: document.getElementById('floorFilter').value,
            status: document.getElementById('statusFilter').value
        };

        // Refetch resources and events with filters
        calendar.refetchResources();
        calendar.refetchEvents();
    });

    // View Toggle Handlers
    document.getElementById('calendarMonthBtn').addEventListener('click', () => {
        calendar.changeView('resourceTimelineMonth');
    });
    document.getElementById('calendarWeekBtn').addEventListener('click', () => {
        calendar.changeView('resourceTimelineWeek');
    });
    document.getElementById('calendarDayBtn').addEventListener('click', () => {
        calendar.changeView('resourceTimelineDay');
    });

    // Booking Modal Functions
    function showBookingModal(mode, data) {
        const modal = $('#bookingModal');
        const form = document.getElementById('bookingForm');
        const deleteBtn = document.getElementById('deleteBooking');

        // Reset form
        form.reset();

        if (mode === 'edit') {
            // Fill form with existing booking data
            form.elements.guestName.value = data.extendedProps.guestName;
            form.elements.roomId.value = data.resourceId;
            form.elements.checkIn.value = formatDateTime(data.start);
            form.elements.checkOut.value = formatDateTime(data.end);
            form.elements.adults.value = data.extendedProps.adults || 1;
            form.elements.children.value = data.extendedProps.children || 0;
            form.elements.specialRequests.value = data.extendedProps.specialRequests || '';

            // Show delete button for existing bookings
            deleteBtn.style.display = 'block';
            deleteBtn.onclick = () => deleteBooking(data.id);
        } else {
            // Set initial values for new booking
            form.elements.roomId.value = data.resourceId;
            form.elements.checkIn.value = formatDateTime(data.start);
            form.elements.checkOut.value = formatDateTime(data.end);

            // Hide delete button for new bookings
            deleteBtn.style.display = 'none';
        }

        // Show modal
        modal.modal('show');
    }

    function formatDateTime(date) {
        return new Date(date).toISOString().slice(0, 16);
    }

    // API Functions
    async function updateBooking(event) {
        try {
            const response = await fetch(`/admin/api/bookings/${event.id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    resourceId: event.resourceId,
                    start: event.start,
                    end: event.end
                })
            });

            if (!response.ok) throw new Error('Failed to update booking');

            // Refresh calendar
            calendar.refetchEvents();
        } catch (error) {
            console.error('Error updating booking:', error);
            alert('Failed to update booking. Please try again.');
            calendar.refetchEvents();
        }
    }

    async function deleteBooking(bookingId) {
        if (!confirm('Are you sure you want to delete this booking?')) return;

        try {
            const response = await fetch(`/admin/api/bookings/${bookingId}`, {
                method: 'DELETE'
            });

            if (!response.ok) throw new Error('Failed to delete booking');

            // Close modal and refresh calendar
            $('#bookingModal').modal('hide');
            calendar.refetchEvents();
        } catch (error) {
            console.error('Error deleting booking:', error);
            alert('Failed to delete booking. Please try again.');
        }
    }

    // Save booking handler
    document.getElementById('saveBooking').addEventListener('click', async function() {
        const form = document.getElementById('bookingForm');
        if (!form.checkValidity()) {
            form.reportValidity();
            return;
        }

        const formData = new FormData(form);
        const bookingData = Object.fromEntries(formData.entries());

        try {
            const response = await fetch('/admin/api/bookings', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(bookingData)
            });

            if (!response.ok) throw new Error('Failed to save booking');

            // Close modal and refresh calendar
            $('#bookingModal').modal('hide');
            calendar.refetchEvents();
        } catch (error) {
            console.error('Error saving booking:', error);
            alert('Failed to save booking. Please try again.');
        }
    });
});
</script>
