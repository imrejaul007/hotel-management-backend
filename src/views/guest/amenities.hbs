{{> guest/header}}

<div class="container-fluid py-4">
    <div class="row">
        <!-- Available Amenities -->
        <div class="col-12 col-xl-8 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Available Amenities & Supplies</h5>
                </div>
                <div class="card-body">
                    <div class="row" id="amenitiesList">
                        <!-- Amenities will be loaded here -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Request Cart -->
        <div class="col-12 col-xl-4 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Your Request</h5>
                </div>
                <div class="card-body">
                    <div id="requestCart">
                        <!-- Cart items will be added here -->
                    </div>
                    <div class="mt-3">
                        <label class="form-label">Additional Notes</label>
                        <textarea id="requestNotes" class="form-control" rows="3" placeholder="Any special instructions..."></textarea>
                    </div>
                    <button class="btn btn-primary w-100 mt-3" onclick="submitRequest()">
                        Submit Request
                    </button>
                </div>
            </div>
        </div>

        <!-- Request History -->
        <div class="col-12 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Request History</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table align-items-center mb-0">
                            <thead>
                                <tr>
                                    <th>Request Date</th>
                                    <th>Items</th>
                                    <th>Status</th>
                                    <th>Delivery Date</th>
                                </tr>
                            </thead>
                            <tbody id="requestHistory">
                                <!-- Request history will be loaded here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add to Cart Modal -->
<div class="modal fade" id="addToCartModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalItemName"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Quantity</label>
                    <input type="number" id="modalQuantity" class="form-control" min="1" value="1">
                </div>
                <div class="mb-3">
                    <label class="form-label">Notes</label>
                    <textarea id="modalNotes" class="form-control" rows="2" placeholder="Any specific requirements..."></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="addToCart()">Add to Request</button>
            </div>
        </div>
    </div>
</div>

{{#section 'scripts'}}
<script>
let availableAmenities = [];
let cartItems = [];
let selectedItem = null;

// Load available amenities
async function loadAmenities() {
    try {
        const response = await fetch('/guest/available-amenities');
        const result = await response.json();
        
        if (result.success) {
            availableAmenities = result.data;
            renderAmenities();
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Error loading amenities');
    }
}

// Render amenities list
function renderAmenities() {
    const container = document.getElementById('amenitiesList');
    
    container.innerHTML = availableAmenities.map(item => `
        <div class="col-md-6 col-lg-4 mb-4">
            <div class="card h-100">
                ${item.image ? `
                    <img src="${item.image}" class="card-img-top" alt="${item.name}">
                ` : ''}
                <div class="card-body">
                    <h5 class="card-title">${item.name}</h5>
                    <p class="card-text">${item.description || ''}</p>
                    <button class="btn btn-primary" onclick="showAddToCartModal('${item._id}')">
                        Request
                    </button>
                </div>
            </div>
        </div>
    `).join('');
}

// Show add to cart modal
function showAddToCartModal(itemId) {
    selectedItem = availableAmenities.find(item => item._id === itemId);
    
    document.getElementById('modalItemName').textContent = selectedItem.name;
    document.getElementById('modalQuantity').value = '1';
    document.getElementById('modalNotes').value = '';
    
    new bootstrap.Modal(document.getElementById('addToCartModal')).show();
}

// Add item to cart
function addToCart() {
    const quantity = parseInt(document.getElementById('modalQuantity').value);
    const notes = document.getElementById('modalNotes').value;
    
    if (quantity < 1) {
        alert('Please enter a valid quantity');
        return;
    }
    
    cartItems.push({
        id: selectedItem._id,
        name: selectedItem.name,
        quantity,
        notes
    });
    
    bootstrap.Modal.getInstance(document.getElementById('addToCartModal')).hide();
    renderCart();
}

// Render cart
function renderCart() {
    const container = document.getElementById('requestCart');
    
    if (cartItems.length === 0) {
        container.innerHTML = '<p class="text-muted">No items added yet</p>';
        return;
    }
    
    container.innerHTML = cartItems.map((item, index) => `
        <div class="d-flex justify-content-between align-items-center mb-2">
            <div>
                <h6 class="mb-0">${item.name}</h6>
                <small class="text-muted">Qty: ${item.quantity}</small>
                ${item.notes ? `<br><small class="text-muted">Note: ${item.notes}</small>` : ''}
            </div>
            <button class="btn btn-sm btn-danger" onclick="removeFromCart(${index})">
                <i class="fas fa-times"></i>
            </button>
        </div>
    `).join('');
}

// Remove item from cart
function removeFromCart(index) {
    cartItems.splice(index, 1);
    renderCart();
}

// Submit request
async function submitRequest() {
    if (cartItems.length === 0) {
        alert('Please add items to your request');
        return;
    }
    
    try {
        const response = await fetch('/guest/amenity-request', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                items: cartItems,
                notes: document.getElementById('requestNotes').value
            })
        });
        
        const result = await response.json();
        
        if (result.success) {
            alert('Request submitted successfully');
            cartItems = [];
            document.getElementById('requestNotes').value = '';
            renderCart();
            loadRequestHistory();
        } else {
            alert(result.message || 'Error submitting request');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Error submitting request');
    }
}

// Load request history
async function loadRequestHistory() {
    try {
        const response = await fetch('/guest/amenity-requests');
        const result = await response.json();
        
        if (result.success) {
            renderRequestHistory(result.data);
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Error loading request history');
    }
}

// Render request history
function renderRequestHistory(requests) {
    const container = document.getElementById('requestHistory');
    
    container.innerHTML = requests.map(request => `
        <tr>
            <td>${new Date(request.requestDate).toLocaleDateString()}</td>
            <td>
                ${request.items.map(item => 
                    `${item.item.name} (${item.quantity} ${item.item.unit})`
                ).join(', ')}
            </td>
            <td>
                <span class="badge bg-${getStatusColor(request.status)}">
                    ${formatStatus(request.status)}
                </span>
            </td>
            <td>
                ${request.deliveryDate ? new Date(request.deliveryDate).toLocaleDateString() : 'Pending'}
            </td>
        </tr>
    `).join('');
}

function getStatusColor(status) {
    const colors = {
        pending: 'warning',
        approved: 'info',
        delivered: 'success',
        rejected: 'danger'
    };
    return colors[status] || 'secondary';
}

function formatStatus(status) {
    return status.charAt(0).toUpperCase() + status.slice(1);
}

// Initial load
loadAmenities();
loadRequestHistory();
</script>
{{/section}}
